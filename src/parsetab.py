
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNewleftLessLessEqualGreaterGreaterEqualEqualsDifferentrightLPARENTHESISRPARENTHESISADD Alter AlterB Bool Break CALL COMMA Case DIV Different Else Equals Este False Greater GreaterEqual Hammer ID IsTrue LPARENTHESIS Less LessEqual MUL MoveLeft MoveRight New Norte Num Number Oeste PRINCIPAL PrintValues Proc RPARENTHESIS Repeat SEMMICOLOM SUB Stop Sur TEXTVALUE Then True Until Values When Whilestart : instrucciones\n            main :  Proc PRINCIPAL LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOMProced : Proc ID LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOMinstrucciones : instrucciones instruccion\n                instrucciones : instruccioninstruccion : varDeclaration\n                     | Values_f\n                     | Alter_f\n                     | AlterB_f\n                     | MoveRight_f\n                     | MoveLeft_f\n                     | Hammer_f\n                     | Stop_f\n                     | IsTrue_f\n                     | Repeat_f\n                     | Until_f\n                     | While_f\n                     | Case_f\n                     | Case2_f\n                     | PrintValues_f\n                     | call_f\n                     | main\n                     | Proced\n                     | emptyValues_f : Values LPARENTHESIS ID COMMA valorDato RPARENTHESIS SEMMICOLOMvalorDato : True\n                | False\n                | Number\n                | Alter_f\n                | AlterB_fAlter_f : Alter LPARENTHESIS ID COMMA ADD COMMA valorDato RPARENTHESIS SEMMICOLOM\n               | Alter LPARENTHESIS ID COMMA SUB COMMA valorDato RPARENTHESIS SEMMICOLOM\n               | Alter LPARENTHESIS ID COMMA MUL COMMA valorDato RPARENTHESIS SEMMICOLOM\n               | Alter LPARENTHESIS ID COMMA DIV COMMA valorDato RPARENTHESIS SEMMICOLOMAlterB_f : AlterB LPARENTHESIS ID RPARENTHESIS SEMMICOLOMMoveRight_f : MoveRight SEMMICOLOMMoveLeft_f : MoveLeft SEMMICOLOMHammer_f : Hammer LPARENTHESIS Norte RPARENTHESIS SEMMICOLOM\n                 | Hammer LPARENTHESIS Sur RPARENTHESIS SEMMICOLOM\n                 | Hammer LPARENTHESIS Este RPARENTHESIS SEMMICOLOM\n                 | Hammer LPARENTHESIS Oeste RPARENTHESIS SEMMICOLOMStop_f : Stop SEMMICOLOMRepeat_f : Repeat LPARENTHESIS instrucciones Break RPARENTHESIS SEMMICOLOMUntil_f : Until LPARENTHESIS instrucciones RPARENTHESIS condicionalWhile_f : While condicional LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOMCase_f : Case ID When LPARENTHESIS condicional RPARENTHESIS Then LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOM\n              | Case ID When LPARENTHESIS condicional RPARENTHESIS Then LPARENTHESIS instrucciones RPARENTHESIS Else LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOMopciones : opciones When valorDato Then LPARENTHESIS instrucciones RPARENTHESIS\n                | When valorDato Then LPARENTHESIS instrucciones RPARENTHESISCase2_f : Case ID opciones SEMMICOLOM\n                | Case ID opciones Else instrucciones SEMMICOLOM something : ID COMMA something\n                 | expresionNum COMMA something\n                 | expresionNum\n                 | Number COMMA something\n                 | Number\n                 | TEXTVALUE COMMA something\n                 | TEXTVALUE\n                 | emptyPrintValues_f : PrintValues LPARENTHESIS something RPARENTHESIS SEMMICOLOM empty : condicional : IsTrue_f\n                   | Greater_f\n                   | GreaterEqual_f\n                   | Equals_f\n                   | Different_f\n                   | LessEqual_f\n                   | Less_fIsTrue_f : IsTrue LPARENTHESIS ID RPARENTHESIS SEMMICOLOM\n                | IsTrue LPARENTHESIS ID RPARENTHESISGreater_f : expresionNum Greater expresionNum SEMMICOLOM\n                 | expresionNum Greater expresionNum GreaterEqual_f : expresionNum GreaterEqual expresionNum SEMMICOLOM\n                        |  expresionNum GreaterEqual expresionNumEquals_f : expresionNum Equals expresionNum SEMMICOLOM\n                | expresionNum Equals expresionNum Different_f : expresionNum Different expresionNum SEMMICOLOM\n                    | expresionNum Different expresionNum LessEqual_f : expresionNum LessEqual expresionNum SEMMICOLOM\n                    | expresionNum LessEqual expresionNumLess_f : expresionNum Less expresionNum SEMMICOLOM\n              | expresionNum Less expresionNumvarDeclaration : New ID COMMA LPARENTHESIS tipoDatos COMMA valorDato RPARENTHESIS SEMMICOLOM expresionNum : ID\n                     | Alter_f tipoDatos : Bool\n                 | Numcall_f : CALL LPARENTHESIS ID RPARENTHESIS SEMMICOLOM'
    
_lr_action_items = {'New':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[23,23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,23,23,-62,-63,-64,-65,-66,-67,-68,-84,-85,23,23,23,23,23,-70,23,-72,-74,-76,-78,-80,-82,-50,23,23,23,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,23,-60,-88,-43,-45,23,-51,-2,-3,-25,23,23,23,23,-83,-31,-32,-33,-34,23,-46,23,23,-47,]),'Values':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[24,24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,24,24,-62,-63,-64,-65,-66,-67,-68,-84,-85,24,24,24,24,24,-70,24,-72,-74,-76,-78,-80,-82,-50,24,24,24,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,24,-60,-88,-43,-45,24,-51,-2,-3,-25,24,24,24,24,-83,-31,-32,-33,-34,24,-46,24,24,-47,]),'Alter':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,63,76,77,78,79,80,81,82,83,84,85,94,95,97,104,106,107,108,109,110,111,112,113,114,121,122,123,125,126,127,128,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,167,169,170,171,172,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[25,25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,25,-4,-36,-37,-42,25,25,-62,-63,-64,-65,-66,-67,-68,-84,-85,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-70,25,25,-72,-74,-76,-78,-80,-82,25,-50,25,25,25,25,25,25,25,25,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,25,-60,-88,25,25,25,25,25,-43,-45,25,-51,-2,-3,-25,25,25,25,25,-83,-31,-32,-33,-34,25,-46,25,25,-47,]),'AlterB':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,85,94,95,97,104,107,108,109,110,111,112,113,121,122,123,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,167,169,170,171,172,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[26,26,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,26,26,-62,-63,-64,-65,-66,-67,-68,-84,-85,26,26,26,26,26,26,26,-70,26,-72,-74,-76,-78,-80,-82,-50,26,26,26,26,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,26,-60,-88,26,26,26,26,26,-43,-45,26,-51,-2,-3,-25,26,26,26,26,-83,-31,-32,-33,-34,26,-46,26,26,-47,]),'MoveRight':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[27,27,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,27,27,-62,-63,-64,-65,-66,-67,-68,-84,-85,27,27,27,27,27,-70,27,-72,-74,-76,-78,-80,-82,-50,27,27,27,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,27,-60,-88,-43,-45,27,-51,-2,-3,-25,27,27,27,27,-83,-31,-32,-33,-34,27,-46,27,27,-47,]),'MoveLeft':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[28,28,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,28,28,-62,-63,-64,-65,-66,-67,-68,-84,-85,28,28,28,28,28,-70,28,-72,-74,-76,-78,-80,-82,-50,28,28,28,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,28,-60,-88,-43,-45,28,-51,-2,-3,-25,28,28,28,28,-83,-31,-32,-33,-34,28,-46,28,28,-47,]),'Hammer':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[29,29,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,29,29,-62,-63,-64,-65,-66,-67,-68,-84,-85,29,29,29,29,29,-70,29,-72,-74,-76,-78,-80,-82,-50,29,29,29,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,29,-60,-88,-43,-45,29,-51,-2,-3,-25,29,29,29,29,-83,-31,-32,-33,-34,29,-46,29,29,-47,]),'Stop':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[30,30,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,30,30,-62,-63,-64,-65,-66,-67,-68,-84,-85,30,30,30,30,30,-70,30,-72,-74,-76,-78,-80,-82,-50,30,30,30,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,30,-60,-88,-43,-45,30,-51,-2,-3,-25,30,30,30,30,-83,-31,-32,-33,-34,30,-46,30,30,-47,]),'IsTrue':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,106,107,108,109,110,111,112,113,114,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[31,31,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,31,-4,-36,-37,-42,31,31,-62,-63,-64,-65,-66,-67,-68,-84,-85,31,31,31,31,31,-70,31,31,-72,-74,-76,-78,-80,-82,31,-50,31,31,31,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,31,-60,-88,-43,-45,31,-51,-2,-3,-25,31,31,31,31,-83,-31,-32,-33,-34,31,-46,31,31,-47,]),'Repeat':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[32,32,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,32,32,-62,-63,-64,-65,-66,-67,-68,-84,-85,32,32,32,32,32,-70,32,-72,-74,-76,-78,-80,-82,-50,32,32,32,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,32,-60,-88,-43,-45,32,-51,-2,-3,-25,32,32,32,32,-83,-31,-32,-33,-34,32,-46,32,32,-47,]),'Until':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[33,33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,33,33,-62,-63,-64,-65,-66,-67,-68,-84,-85,33,33,33,33,33,-70,33,-72,-74,-76,-78,-80,-82,-50,33,33,33,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,33,-60,-88,-43,-45,33,-51,-2,-3,-25,33,33,33,33,-83,-31,-32,-33,-34,33,-46,33,33,-47,]),'While':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[34,34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,34,34,-62,-63,-64,-65,-66,-67,-68,-84,-85,34,34,34,34,34,-70,34,-72,-74,-76,-78,-80,-82,-50,34,34,34,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,34,-60,-88,-43,-45,34,-51,-2,-3,-25,34,34,34,34,-83,-31,-32,-33,-34,34,-46,34,34,-47,]),'Case':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[35,35,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,35,35,-62,-63,-64,-65,-66,-67,-68,-84,-85,35,35,35,35,35,-70,35,-72,-74,-76,-78,-80,-82,-50,35,35,35,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,35,-60,-88,-43,-45,35,-51,-2,-3,-25,35,35,35,35,-83,-31,-32,-33,-34,35,-46,35,35,-47,]),'PrintValues':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[36,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,36,36,-62,-63,-64,-65,-66,-67,-68,-84,-85,36,36,36,36,36,-70,36,-72,-74,-76,-78,-80,-82,-50,36,36,36,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,36,-60,-88,-43,-45,36,-51,-2,-3,-25,36,36,36,36,-83,-31,-32,-33,-34,36,-46,36,36,-47,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[37,37,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,37,37,-62,-63,-64,-65,-66,-67,-68,-84,-85,37,37,37,37,37,-70,37,-72,-74,-76,-78,-80,-82,-50,37,37,37,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,37,-60,-88,-43,-45,37,-51,-2,-3,-25,37,37,37,37,-83,-31,-32,-33,-34,37,-46,37,37,-47,]),'Proc':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,50,52,53,54,55,56,57,58,59,61,76,77,78,94,95,104,107,108,109,110,111,112,113,121,122,130,131,140,141,142,143,144,145,147,149,150,151,152,153,154,157,159,164,173,174,176,177,179,180,182,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[38,38,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,38,38,-62,-63,-64,-65,-66,-67,-68,-84,-85,38,38,38,38,38,-70,38,-72,-74,-76,-78,-80,-82,-50,38,38,38,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,38,-60,-88,-43,-45,38,-51,-2,-3,-25,38,38,38,38,-83,-31,-32,-33,-34,38,-46,38,38,-47,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,52,53,54,55,56,57,58,59,61,104,108,109,110,111,112,113,121,140,141,142,143,144,145,147,149,150,151,152,153,154,159,164,173,174,177,179,180,182,198,199,200,201,202,206,211,],[-61,0,-1,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,-62,-63,-64,-65,-66,-67,-68,-84,-85,-70,-72,-74,-76,-78,-80,-82,-50,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,-60,-88,-43,-45,-51,-2,-3,-25,-83,-31,-32,-33,-34,-46,-47,]),'Break':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,49,52,53,54,55,56,57,58,59,61,76,104,108,109,110,111,112,113,121,140,141,142,143,144,145,147,149,150,151,152,153,154,159,164,173,174,177,179,180,182,198,199,200,201,202,206,211,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,-61,-62,-63,-64,-65,-66,-67,-68,-84,-85,105,-70,-72,-74,-76,-78,-80,-82,-50,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,-60,-88,-43,-45,-51,-2,-3,-25,-83,-31,-32,-33,-34,-46,-47,]),'RPARENTHESIS':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,44,45,47,50,52,53,54,55,56,57,58,59,61,63,70,71,72,73,74,75,77,78,87,88,89,90,91,92,93,94,95,104,105,107,108,109,110,111,112,113,116,117,118,119,120,121,125,126,127,128,130,131,135,140,141,142,143,144,145,147,149,150,151,152,153,154,155,159,160,161,162,163,164,173,174,176,177,179,180,181,182,183,184,185,186,188,189,195,197,198,199,200,201,202,203,206,208,209,211,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-36,-37,-42,-61,-62,-63,-64,-65,-66,-67,-68,-84,-85,-61,99,100,101,102,103,104,106,-61,124,-84,-54,-56,-58,-59,129,-61,-61,-70,146,148,-72,-74,-76,-78,-80,-82,-26,-27,-28,-29,-30,-50,-61,-61,-61,-61,165,166,168,-35,-38,-39,-40,-41,-69,-44,-71,-73,-75,-77,-79,-81,175,-60,-52,-53,-55,-57,-88,-43,-45,-61,-51,-2,-3,190,-25,191,192,193,194,196,-61,-61,204,-83,-31,-32,-33,-34,205,-46,-61,210,-47,]),'SEMMICOLOM':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,27,28,30,39,44,45,47,52,53,54,55,56,57,58,59,61,86,99,100,101,102,103,104,108,109,110,111,112,113,121,122,124,129,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,159,164,165,166,168,173,174,177,179,180,182,190,191,192,193,194,196,198,199,200,201,202,204,205,206,210,211,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,44,45,47,-4,-36,-37,-42,-62,-63,-64,-65,-66,-67,-68,-84,-85,121,140,141,142,143,144,-70,-72,-74,-76,-78,-80,-82,-50,-61,159,164,-35,-38,-39,-40,-41,-69,173,-44,174,-71,-73,-75,-77,-79,-81,177,-60,-88,179,180,182,-43,-45,-51,-2,-3,-25,198,199,200,201,202,-49,-83,-31,-32,-33,-34,-48,206,-46,211,-47,]),'ID':([23,34,35,38,41,42,43,48,63,64,79,80,81,82,83,84,106,114,125,126,127,128,],[40,59,62,66,68,69,70,75,88,93,59,59,59,59,59,59,59,59,88,88,88,88,]),'LPARENTHESIS':([24,25,26,29,31,32,33,36,37,51,52,53,54,55,56,57,58,59,61,65,66,67,85,104,108,109,110,111,112,113,145,149,150,151,152,153,154,156,178,187,199,200,201,202,207,],[41,42,43,46,48,49,50,63,64,78,-62,-63,-64,-65,-66,-67,-68,-84,-85,94,95,96,114,-70,-72,-74,-76,-78,-80,-82,-69,-71,-73,-75,-77,-79,-81,176,189,195,-31,-32,-33,-34,208,]),'PRINCIPAL':([38,],[65,]),'COMMA':([40,61,68,69,88,89,90,91,132,133,134,136,137,138,139,199,200,201,202,],[67,-85,97,98,125,126,127,128,167,-86,-87,169,170,171,172,-31,-32,-33,-34,]),'Norte':([46,],[71,]),'Sur':([46,],[72,]),'Este':([46,],[73,]),'Oeste':([46,],[74,]),'Greater':([59,60,61,199,200,201,202,],[-84,79,-85,-31,-32,-33,-34,]),'GreaterEqual':([59,60,61,199,200,201,202,],[-84,80,-85,-31,-32,-33,-34,]),'Equals':([59,60,61,199,200,201,202,],[-84,81,-85,-31,-32,-33,-34,]),'Different':([59,60,61,199,200,201,202,],[-84,82,-85,-31,-32,-33,-34,]),'LessEqual':([59,60,61,199,200,201,202,],[-84,83,-85,-31,-32,-33,-34,]),'Less':([59,60,61,199,200,201,202,],[-84,84,-85,-31,-32,-33,-34,]),'When':([62,86,196,204,],[85,123,-49,-48,]),'Number':([63,85,97,123,125,126,127,128,167,169,170,171,172,],[90,118,118,118,90,90,90,90,118,118,118,118,118,]),'TEXTVALUE':([63,125,126,127,128,],[91,91,91,91,91,]),'True':([85,97,123,167,169,170,171,172,],[116,116,116,116,116,116,116,116,]),'False':([85,97,123,167,169,170,171,172,],[117,117,117,117,117,117,117,117,]),'Else':([86,196,204,205,],[122,-49,-48,207,]),'Bool':([96,],[133,]),'Num':([96,],[134,]),'ADD':([98,],[136,]),'SUB':([98,],[137,]),'MUL':([98,],[138,]),'DIV':([98,],[139,]),'Then':([115,116,117,118,119,120,140,158,175,199,200,201,202,],[156,-26,-27,-28,-29,-30,-35,178,187,-31,-32,-33,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instrucciones':([0,49,50,78,94,95,122,176,189,195,208,],[2,76,77,107,130,131,157,188,197,203,209,]),'instruccion':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[3,39,3,3,39,39,3,3,3,39,3,39,39,39,3,39,3,3,39,39,3,39,]),'varDeclaration':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Values_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'Alter_f':([0,2,34,49,50,63,76,77,78,79,80,81,82,83,84,85,94,95,97,106,107,114,122,123,125,126,127,128,130,131,157,167,169,170,171,172,176,188,189,195,197,203,208,209,],[6,6,61,6,6,61,6,6,6,61,61,61,61,61,61,119,6,6,119,61,6,61,6,119,61,61,61,61,6,6,6,119,119,119,119,119,6,6,6,6,6,6,6,6,]),'AlterB_f':([0,2,49,50,76,77,78,85,94,95,97,107,122,123,130,131,157,167,169,170,171,172,176,188,189,195,197,203,208,209,],[7,7,7,7,7,7,7,120,7,7,120,7,7,120,7,7,7,120,120,120,120,120,7,7,7,7,7,7,7,7,]),'MoveRight_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'MoveLeft_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Hammer_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Stop_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'IsTrue_f':([0,2,34,49,50,76,77,78,94,95,106,107,114,122,130,131,157,176,188,189,195,197,203,208,209,],[12,12,52,12,12,12,12,12,12,12,52,12,52,12,12,12,12,12,12,12,12,12,12,12,12,]),'Repeat_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'Until_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'While_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'Case_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'Case2_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'PrintValues_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'call_f':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'main':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'Proced':([0,2,49,50,76,77,78,94,95,107,122,130,131,157,176,188,189,195,197,203,208,209,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'empty':([0,2,49,50,63,76,77,78,94,95,107,122,125,126,127,128,130,131,157,176,188,189,195,197,203,208,209,],[22,22,22,22,92,22,22,22,22,22,22,22,92,92,92,92,22,22,22,22,22,22,22,22,22,22,22,]),'condicional':([34,106,114,],[51,147,155,]),'Greater_f':([34,106,114,],[53,53,53,]),'GreaterEqual_f':([34,106,114,],[54,54,54,]),'Equals_f':([34,106,114,],[55,55,55,]),'Different_f':([34,106,114,],[56,56,56,]),'LessEqual_f':([34,106,114,],[57,57,57,]),'Less_f':([34,106,114,],[58,58,58,]),'expresionNum':([34,63,79,80,81,82,83,84,106,114,125,126,127,128,],[60,89,108,109,110,111,112,113,60,60,89,89,89,89,]),'opciones':([62,],[86,]),'something':([63,125,126,127,128,],[87,160,161,162,163,]),'valorDato':([85,97,123,167,169,170,171,172,],[115,135,158,181,183,184,185,186,]),'tipoDatos':([96,],[132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instrucciones','start',1,'p_start','SintacticAnalyzer.py',33),
  ('main -> Proc PRINCIPAL LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOM','main',6,'p_main','SintacticAnalyzer.py',39),
  ('Proced -> Proc ID LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOM','Proced',6,'p_Proced','SintacticAnalyzer.py',47),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_list_instrucciones','SintacticAnalyzer.py',55),
  ('instrucciones -> instruccion','instrucciones',1,'p_one_instruccion','SintacticAnalyzer.py',60),
  ('instruccion -> varDeclaration','instruccion',1,'p_instruccion','SintacticAnalyzer.py',65),
  ('instruccion -> Values_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',66),
  ('instruccion -> Alter_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',67),
  ('instruccion -> AlterB_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',68),
  ('instruccion -> MoveRight_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',69),
  ('instruccion -> MoveLeft_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',70),
  ('instruccion -> Hammer_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',71),
  ('instruccion -> Stop_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',72),
  ('instruccion -> IsTrue_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',73),
  ('instruccion -> Repeat_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',74),
  ('instruccion -> Until_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',75),
  ('instruccion -> While_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',76),
  ('instruccion -> Case_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',77),
  ('instruccion -> Case2_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',78),
  ('instruccion -> PrintValues_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',79),
  ('instruccion -> call_f','instruccion',1,'p_instruccion','SintacticAnalyzer.py',80),
  ('instruccion -> main','instruccion',1,'p_instruccion','SintacticAnalyzer.py',81),
  ('instruccion -> Proced','instruccion',1,'p_instruccion','SintacticAnalyzer.py',82),
  ('instruccion -> empty','instruccion',1,'p_instruccion','SintacticAnalyzer.py',83),
  ('Values_f -> Values LPARENTHESIS ID COMMA valorDato RPARENTHESIS SEMMICOLOM','Values_f',7,'p_Values_f','SintacticAnalyzer.py',89),
  ('valorDato -> True','valorDato',1,'p_valorDato','SintacticAnalyzer.py',93),
  ('valorDato -> False','valorDato',1,'p_valorDato','SintacticAnalyzer.py',94),
  ('valorDato -> Number','valorDato',1,'p_valorDato','SintacticAnalyzer.py',95),
  ('valorDato -> Alter_f','valorDato',1,'p_valorDato','SintacticAnalyzer.py',96),
  ('valorDato -> AlterB_f','valorDato',1,'p_valorDato','SintacticAnalyzer.py',97),
  ('Alter_f -> Alter LPARENTHESIS ID COMMA ADD COMMA valorDato RPARENTHESIS SEMMICOLOM','Alter_f',9,'p_Alter_f','SintacticAnalyzer.py',103),
  ('Alter_f -> Alter LPARENTHESIS ID COMMA SUB COMMA valorDato RPARENTHESIS SEMMICOLOM','Alter_f',9,'p_Alter_f','SintacticAnalyzer.py',104),
  ('Alter_f -> Alter LPARENTHESIS ID COMMA MUL COMMA valorDato RPARENTHESIS SEMMICOLOM','Alter_f',9,'p_Alter_f','SintacticAnalyzer.py',105),
  ('Alter_f -> Alter LPARENTHESIS ID COMMA DIV COMMA valorDato RPARENTHESIS SEMMICOLOM','Alter_f',9,'p_Alter_f','SintacticAnalyzer.py',106),
  ('AlterB_f -> AlterB LPARENTHESIS ID RPARENTHESIS SEMMICOLOM','AlterB_f',5,'p_AlterB_f','SintacticAnalyzer.py',112),
  ('MoveRight_f -> MoveRight SEMMICOLOM','MoveRight_f',2,'p_MoveRight_f','SintacticAnalyzer.py',117),
  ('MoveLeft_f -> MoveLeft SEMMICOLOM','MoveLeft_f',2,'p_MoveLeft_f','SintacticAnalyzer.py',122),
  ('Hammer_f -> Hammer LPARENTHESIS Norte RPARENTHESIS SEMMICOLOM','Hammer_f',5,'p_Hammer_f','SintacticAnalyzer.py',127),
  ('Hammer_f -> Hammer LPARENTHESIS Sur RPARENTHESIS SEMMICOLOM','Hammer_f',5,'p_Hammer_f','SintacticAnalyzer.py',128),
  ('Hammer_f -> Hammer LPARENTHESIS Este RPARENTHESIS SEMMICOLOM','Hammer_f',5,'p_Hammer_f','SintacticAnalyzer.py',129),
  ('Hammer_f -> Hammer LPARENTHESIS Oeste RPARENTHESIS SEMMICOLOM','Hammer_f',5,'p_Hammer_f','SintacticAnalyzer.py',130),
  ('Stop_f -> Stop SEMMICOLOM','Stop_f',2,'p_Stop_f','SintacticAnalyzer.py',135),
  ('Repeat_f -> Repeat LPARENTHESIS instrucciones Break RPARENTHESIS SEMMICOLOM','Repeat_f',6,'p_Repeat_f','SintacticAnalyzer.py',140),
  ('Until_f -> Until LPARENTHESIS instrucciones RPARENTHESIS condicional','Until_f',5,'p_Until_f','SintacticAnalyzer.py',145),
  ('While_f -> While condicional LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOM','While_f',6,'p_While_f','SintacticAnalyzer.py',150),
  ('Case_f -> Case ID When LPARENTHESIS condicional RPARENTHESIS Then LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOM','Case_f',11,'p_Case_f','SintacticAnalyzer.py',155),
  ('Case_f -> Case ID When LPARENTHESIS condicional RPARENTHESIS Then LPARENTHESIS instrucciones RPARENTHESIS Else LPARENTHESIS instrucciones RPARENTHESIS SEMMICOLOM','Case_f',15,'p_Case_f','SintacticAnalyzer.py',156),
  ('opciones -> opciones When valorDato Then LPARENTHESIS instrucciones RPARENTHESIS','opciones',7,'p_opciones','SintacticAnalyzer.py',161),
  ('opciones -> When valorDato Then LPARENTHESIS instrucciones RPARENTHESIS','opciones',6,'p_opciones','SintacticAnalyzer.py',162),
  ('Case2_f -> Case ID opciones SEMMICOLOM','Case2_f',4,'p_Case2_f','SintacticAnalyzer.py',165),
  ('Case2_f -> Case ID opciones Else instrucciones SEMMICOLOM','Case2_f',6,'p_Case2_f','SintacticAnalyzer.py',166),
  ('something -> ID COMMA something','something',3,'p_something','SintacticAnalyzer.py',175),
  ('something -> expresionNum COMMA something','something',3,'p_something','SintacticAnalyzer.py',176),
  ('something -> expresionNum','something',1,'p_something','SintacticAnalyzer.py',177),
  ('something -> Number COMMA something','something',3,'p_something','SintacticAnalyzer.py',178),
  ('something -> Number','something',1,'p_something','SintacticAnalyzer.py',179),
  ('something -> TEXTVALUE COMMA something','something',3,'p_something','SintacticAnalyzer.py',180),
  ('something -> TEXTVALUE','something',1,'p_something','SintacticAnalyzer.py',181),
  ('something -> empty','something',1,'p_something','SintacticAnalyzer.py',182),
  ('PrintValues_f -> PrintValues LPARENTHESIS something RPARENTHESIS SEMMICOLOM','PrintValues_f',5,'p_PrintValues_f','SintacticAnalyzer.py',192),
  ('empty -> <empty>','empty',0,'p_empty','SintacticAnalyzer.py',198),
  ('condicional -> IsTrue_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',206),
  ('condicional -> Greater_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',207),
  ('condicional -> GreaterEqual_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',208),
  ('condicional -> Equals_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',209),
  ('condicional -> Different_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',210),
  ('condicional -> LessEqual_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',211),
  ('condicional -> Less_f','condicional',1,'p_condicional_f','SintacticAnalyzer.py',212),
  ('IsTrue_f -> IsTrue LPARENTHESIS ID RPARENTHESIS SEMMICOLOM','IsTrue_f',5,'p_IsTrue_f','SintacticAnalyzer.py',217),
  ('IsTrue_f -> IsTrue LPARENTHESIS ID RPARENTHESIS','IsTrue_f',4,'p_IsTrue_f','SintacticAnalyzer.py',218),
  ('Greater_f -> expresionNum Greater expresionNum SEMMICOLOM','Greater_f',4,'p_Greater_f','SintacticAnalyzer.py',223),
  ('Greater_f -> expresionNum Greater expresionNum','Greater_f',3,'p_Greater_f','SintacticAnalyzer.py',224),
  ('GreaterEqual_f -> expresionNum GreaterEqual expresionNum SEMMICOLOM','GreaterEqual_f',4,'p_GreaterEqual_f','SintacticAnalyzer.py',230),
  ('GreaterEqual_f -> expresionNum GreaterEqual expresionNum','GreaterEqual_f',3,'p_GreaterEqual_f','SintacticAnalyzer.py',231),
  ('Equals_f -> expresionNum Equals expresionNum SEMMICOLOM','Equals_f',4,'p_Equals_f','SintacticAnalyzer.py',236),
  ('Equals_f -> expresionNum Equals expresionNum','Equals_f',3,'p_Equals_f','SintacticAnalyzer.py',237),
  ('Different_f -> expresionNum Different expresionNum SEMMICOLOM','Different_f',4,'p_Different_f','SintacticAnalyzer.py',242),
  ('Different_f -> expresionNum Different expresionNum','Different_f',3,'p_Different_f','SintacticAnalyzer.py',243),
  ('LessEqual_f -> expresionNum LessEqual expresionNum SEMMICOLOM','LessEqual_f',4,'p_LessEqual_f','SintacticAnalyzer.py',248),
  ('LessEqual_f -> expresionNum LessEqual expresionNum','LessEqual_f',3,'p_LessEqual_f','SintacticAnalyzer.py',249),
  ('Less_f -> expresionNum Less expresionNum SEMMICOLOM','Less_f',4,'p_Less_f','SintacticAnalyzer.py',254),
  ('Less_f -> expresionNum Less expresionNum','Less_f',3,'p_Less_f','SintacticAnalyzer.py',255),
  ('varDeclaration -> New ID COMMA LPARENTHESIS tipoDatos COMMA valorDato RPARENTHESIS SEMMICOLOM','varDeclaration',9,'p_varDeclaration','SintacticAnalyzer.py',263),
  ('expresionNum -> ID','expresionNum',1,'p_expresionNum','SintacticAnalyzer.py',269),
  ('expresionNum -> Alter_f','expresionNum',1,'p_expresionNum','SintacticAnalyzer.py',270),
  ('tipoDatos -> Bool','tipoDatos',1,'p_tipoDatos','SintacticAnalyzer.py',275),
  ('tipoDatos -> Num','tipoDatos',1,'p_tipoDatos','SintacticAnalyzer.py',276),
  ('call_f -> CALL LPARENTHESIS ID RPARENTHESIS SEMMICOLOM','call_f',5,'p_call_f','SintacticAnalyzer.py',283),
]
